name: Build Release
on:
  push:
    tags:
      - v*.*.*
      - '!v*.*.*-**'
env:
  PROVIDER: "opnsense"
  # THIS GITHUB_TOKEN IS A REQUIREMENT TO BE ABLE TO WRITE TO GH RELEASES
  GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
  # IF YOU NEED TO PUBLISH A NPM PACKAGE THEN ENSURE A NPM_TOKEN SECRET IS SET
  # AND PUBLISH_NPM: TRUE. IF YOU WANT TO PUBLISH TO A PRIVATE NPM REGISTRY
  # THEN ENSURE THE NPM_REGISTRY_URL IS CHANGED
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  PUBLISH_NPM: true
  NPM_REGISTRY_URL: https://registry.npmjs.org
  # IF YOU NEED TO PUBLISH A NUGET PACKAGE THEN ENSURE AN NUGET_PUBLISH_KEY
  # SECRET IS SET AND PUBLISH_NUGET: TRUE. IF YOU WANT TO PUBLISH TO AN ALTERNATIVE
  # NPM REGISTRY THEN ENSURE THE NPM_REGISTRY_URL IS CHANGED
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_TOKEN }}
  NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  PUBLISH_NUGET: true
  # IF YOU NEED TO PUBLISH A PYPI PACKAGE THEN ENSURE AN PYPI_API_TOKEN
  # SECRET IS SET AND PUBLISH_PYPI: TRUE. IF YOU WANT TO PUBLISH TO AN ALTERNATIVE
  # PYPI REGISTRY THEN ENSURE THE PYPI_REPOSITORY_URL IS SET. IF YOU ARE USING AN API_TOKEN THEN
  # YOU DO NOT NEED TO CHANGE THE PYPI_USERNAME (__token__) , IF YOU ARE USING PASSWORD AUTHENTICATION THEN YOU WILL
  # NEED TO CHANGE TO USE THE CORRECT PASSWORD
  PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
  PYPI_USERNAME: "oss4u"
  PYPI_REPOSITORY_URL: ""
  PUBLISH_PYPI: true
  # ----------------------------------
  # AZURE_SIGNING_CLIENT_ID: ${{ secrets.AZURE_SIGNING_CLIENT_ID }}
  # AZURE_SIGNING_CLIENT_SECRET: ${{ secrets.AZURE_SIGNING_CLIENT_SECRET }}
  # AZURE_SIGNING_TENANT_ID: ${{ secrets.AZURE_SIGNING_TENANT_ID }}
  # AZURE_SIGNING_KEY_VAULT_URI: ${{ secrets.AZURE_SIGNING_KEY_VAULT_URI }}
  # SKIP_SIGNING: ${{ secrets.AZURE_SIGNING_CLIENT_ID == '' &&
  #   secrets.AZURE_SIGNING_CLIENT_SECRET == '' && secrets.AZURE_SIGNING_TENANT_ID
  #   == '' && secrets.AZURE_SIGNING_KEY_VAULT_URI == '' }}
  SKIP_SIGNING: true
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  TRAVIS_OS_NAME: linux
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  # PUBLISH_REPO_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  # PUBLISH_REPO_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  GOVERSION: 1.22.x
  NODEVERSION: 20.x
  PYTHONVERSION: "3.11"
  DOTNETVERSION: |
    6.0.x
    3.1.301
jobs:
  prerequisites:
    runs-on: ubuntu-latest
    name: prerequisites
    steps:
    - name: Checkout Repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        lfs: true
    - id: version
      name: Set Provider Version
      uses: pulumi/provider-version-action@f96d032a2758fdda7939e5728eff6c0d980ae894 # v1.6.0
      with:
        set-env: PROVIDER_VERSION
    - name: Install Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: ${{ env.GOVERSION }}
        cache-dependency-path: "**/*.sum"
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@cd6b2b78ad38bdd294341cda064ec0692b06215b # v1.14.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@13b8b7177d6fb736766875dac9b78aab07bd785f # v6.0.1
      with:
        pulumi-version-file: .pulumi.version
    - name: Build codegen binaries
      run: make codegen
    - name: Build Provider
      run: make provider
    - name: Check worktree clean
      id: worktreeClean
      uses: pulumi/git-status-check-action@54000b91124a8dd9fd6a872cb41f5dd246a46e7c # v1.1.1
      with:
        allowed-changes: |-
          sdk/**/pulumi-plugin.json
          sdk/dotnet/Pulumi.*.csproj
          sdk/dotnet/logo.png
          sdk/go/**/pulumiUtilities.go
          sdk/nodejs/package.json
          sdk/python/pyproject.toml
    - name: Commit ${{ matrix.language }} SDK changes for Renovate
      if: failure() && steps.worktreeClean.outcome == 'failure' &&
        contains(github.actor, 'renovate') && github.event_name ==
        'pull_request'
      shell: bash
      run: >
        git diff --quiet -- sdk && echo "no changes to sdk" && exit

        git config --global user.email "bot@pulumi.com"

        git config --global user.name "pulumi-bot"

        # Stash local changes and check out the PR's branch directly.

        git stash

        git fetch

        git checkout "origin/$HEAD_REF"


        # Apply and add our changes, but don't commit any files we expect to

        # always change due to versioning.

        git stash pop

        git add sdk

        git reset     sdk/python/*/pulumi-plugin.json     sdk/python/pyproject.toml     sdk/dotnet/pulumi-plugin.json     sdk/dotnet/Pulumi.*.csproj     sdk/go/*/pulumi-plugin.json     sdk/go/*/internal/pulumiUtilities.go     sdk/nodejs/package.json

        git commit -m 'Commit ${{ matrix.language }} SDK for Renovate'


        # Push with pulumi-bot credentials to trigger a re-run of the

        # workflow. https://github.com/orgs/community/discussions/25702

        git push https://pulumi-bot:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}     "HEAD:$HEAD_REF"
      env:
        HEAD_REF: ${{ github.head_ref }}
    - run: git status --porcelain
    - name: Tar provider binaries
      run: tar -zcf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin/ pulumi-resource-${{ env.PROVIDER }}
    - name: Upload artifacts
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        name: pulumi-${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin/provider.tar.gz
    # - name: Test Provider Library
    #   run: make test_provider
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@1e68e06f1dbfde0e4cefc87efeba9e4643565303 # v5.1.2
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build_sdks:
    needs: prerequisites
    runs-on: ubuntu-latest
    strategy:
      fail-fast: ${{ ! contains(github.actor, 'renovate') }}
      matrix:
        language:
        - nodejs
        - python
        - dotnet
        - go
    name: build_sdks
    steps:
    - name: Checkout Repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        lfs: true
    - id: version
      name: Set Provider Version
      uses: pulumi/provider-version-action@f96d032a2758fdda7939e5728eff6c0d980ae894 # v1.6.0
      with:
        set-env: PROVIDER_VERSION
    - name: Install Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: ${{ env.GOVERSION }}
        cache-dependency-path: "**/*.sum"
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@cd6b2b78ad38bdd294341cda064ec0692b06215b # v1.14.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@13b8b7177d6fb736766875dac9b78aab07bd785f # v6.0.1
      with:
        pulumi-version-file: .pulumi.version
    - name: Setup Node
      uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@87b7050bc53ea08284295505d98d2aa94301e852 # v4.2.0
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Download provider + tfgen binaries
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: pulumi-${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin
    - name: UnTar provider binaries
      run: tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin
    - name: Restore Binary Permissions
      run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
        -exec chmod +x {} \;
    - name: Generate SDK
      run: make ${{ matrix.language }}_sdk
    - name: Check worktree clean
      id: worktreeClean
      uses: pulumi/git-status-check-action@54000b91124a8dd9fd6a872cb41f5dd246a46e7c # v1.1.1
      with:
        allowed-changes: |-
          sdk/**/pulumi-plugin.json
          sdk/dotnet/Pulumi.*.csproj
          sdk/go/**/pulumiUtilities.go
          sdk/nodejs/package.json
          sdk/python/pyproject.toml
    - name: Commit ${{ matrix.language }} SDK changes for Renovate
      if: failure() && steps.worktreeClean.outcome == 'failure' &&
        contains(github.actor, 'renovate') && github.event_name ==
        'pull_request'
      shell: bash
      run: >
        git diff --quiet -- sdk && echo "no changes to sdk" && exit

        git config --global user.email "bot@pulumi.com"

        git config --global user.name "pulumi-bot"

        # Stash local changes and check out the PR's branch directly.

        git stash

        git fetch

        git checkout "origin/$HEAD_REF"


        # Apply and add our changes, but don't commit any files we expect to

        # always change due to versioning.

        git stash pop

        git add sdk

        git reset     sdk/python/*/pulumi-plugin.json     sdk/python/pyproject.toml     sdk/dotnet/pulumi-plugin.json     sdk/dotnet/Pulumi.*.csproj     sdk/go/*/pulumi-plugin.json     sdk/go/*/internal/pulumiUtilities.go     sdk/nodejs/package.json

        git commit -m 'Commit ${{ matrix.language }} SDK for Renovate'


        # Push with pulumi-bot credentials to trigger a re-run of the

        # workflow. https://github.com/orgs/community/discussions/25702

        git push https://pulumi-bot:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}     "HEAD:$HEAD_REF"
      env:
        HEAD_REF: ${{ github.head_ref }}
    - run: git status --porcelain
    - name: Tar SDK folder
      run: tar -zcf sdk/${{ matrix.language }}.tar.gz -C sdk/${{ matrix.language }} .
    - name: Upload artifacts
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        name: ${{ matrix.language  }}-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/${{ matrix.language }}.tar.gz

  # test:
  #   runs-on: ubuntu-latest
  #   needs:
  #   - build_sdks
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       language:
  #       - nodejs
  #       - python
  #       - dotnet
  #       - go
  #       - java
  #   name: test
  #   permissions:
  #     contents: read
  #     id-token: write
  #   steps:
  #   - name: Checkout Repo
  #     uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     with:
  #       lfs: true
  #   - id: version
  #     name: Set Provider Version
  #     uses: pulumi/provider-version-action@f96d032a2758fdda7939e5728eff6c0d980ae894 # v1.6.0
  #     with:
  #       set-env: PROVIDER_VERSION
  #   - name: Install Go
  #     uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
  #     with:
  #       go-version: ${{ env.GOVERSION }}
  #       cache-dependency-path: "**/*.sum"
  #   - name: Install pulumictl
  #     uses: jaxxstorm/action-install-gh-release@cd6b2b78ad38bdd294341cda064ec0692b06215b # v1.14.0
  #     with:
  #       repo: pulumi/pulumictl
  #   - name: Install Pulumi CLI
  #     uses: pulumi/actions@13b8b7177d6fb736766875dac9b78aab07bd785f # v6.0.1
  #     with:
  #       pulumi-version-file: .pulumi.version
  #   - name: Setup Node
  #     uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
  #     with:
  #       node-version: ${{ env.NODEVERSION }}
  #       registry-url: https://registry.npmjs.org
  #   - name: Setup DotNet
  #     uses: actions/setup-dotnet@87b7050bc53ea08284295505d98d2aa94301e852 # v4.2.0
  #     with:
  #       dotnet-version: ${{ env.DOTNETVERSION }}
  #   - name: Setup Python
  #     uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
  #     with:
  #       python-version: ${{ env.PYTHONVERSION }}
  #   - name: Download provider + tfgen binaries
  #     uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
  #     with:
  #       name: pulumi-${{ env.PROVIDER }}-provider.tar.gz
  #       path: ${{ github.workspace }}/bin
  #   - name: UnTar provider binaries
  #     run: tar -zxf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
  #       github.workspace}}/bin
  #   - name: Restore Binary Permissions
  #     run: find ${{ github.workspace }} -name "pulumi-*-${{ env.PROVIDER }}" -print
  #       -exec chmod +x {} \;
  #   - name: Download SDK
  #     uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
  #     with:
  #       name: ${{ matrix.language }}-sdk.tar.gz
  #       path: ${{ github.workspace}}/sdk/
  #   - name: UnTar SDK folder
  #     run: tar -zxf ${{ github.workspace}}/sdk/${{ matrix.language}}.tar.gz -C ${{
  #       github.workspace}}/sdk/${{ matrix.language}}
  #   - name: Update path
  #     run: echo "${{ github.workspace }}/bin" >> $GITHUB_PATH
  #   - name: Install Node dependencies
  #     run: yarn global add typescript
  #   - run: dotnet nuget add source ${{ github.workspace }}/nuget
  #   - name: Install Python deps
  #     run: |-
  #       pip3 install virtualenv==20.0.23
  #       pip3 install pipenv
  #   - name: Install dependencies
  #     run: make install_${{ matrix.language}}_sdk
  #   - name: Configure AWS Credentials
  #     uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
  #     with:
  #       aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       aws-region: ${{ env.AWS_REGION }}
  #       aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       role-duration-seconds: 3600
  #       role-session-name: ${{ env.PROVIDER }}@githubActions
  #       role-to-assume: ${{ secrets.AWS_CI_ROLE_ARN }}
  #   - name: Install gotestfmt
  #     uses: GoTestTools/gotestfmt-action@v2
  #     with:
  #       version: v2.5.0
  #       token: ${{ secrets.GITHUB_TOKEN }}
  #   - name: Run tests
  #     run: >-
  #       set -euo pipefail

  #       cd examples && go test -count=1 -cover -timeout 2h -tags=${{ matrix.language }} -parallel 4 .

  publish:
    runs-on: ubuntu-latest
  #  needs: test
    name: publish
    steps:
    - name: Checkout Repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        lfs: true
    - id: version
      name: Set Provider Version
      uses: pulumi/provider-version-action@f96d032a2758fdda7939e5728eff6c0d980ae894 # v1.6.0
      with:
        set-env: PROVIDER_VERSION
    - name: Install Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: ${{ env.GOVERSION }}
        cache-dependency-path: "**/*.sum"
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@cd6b2b78ad38bdd294341cda064ec0692b06215b # v1.14.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@13b8b7177d6fb736766875dac9b78aab07bd785f # v6.0.1
      with:
        pulumi-version-file: .pulumi.version
    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-region: us-east-2
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     role-duration-seconds: 7200
    #     role-session-name: ${{ env.PROVIDER }}@githubActions
    #     role-external-id: upload-pulumi-release
    #     role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@5742e2a039330cbb23ebf35f046f814d4c6ff811 # v5.1.0
      env:
        GORELEASER_CURRENT_TAG: v${{ steps.version.outputs.version }}
      with:
        args: -p 3 release --clean --timeout 60m0s
        version: latest

  publish_sdk:
    runs-on: ubuntu-latest
    needs: publish
    name: publish_sdks
    steps:
    - name: Checkout Repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        lfs: true
    - id: version
      name: Set Provider Version
      uses: pulumi/provider-version-action@f96d032a2758fdda7939e5728eff6c0d980ae894 # v1.6.0
      with:
        set-env: PROVIDER_VERSION
    - name: Checkout Scripts Repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        path: ci-scripts
        repository: oss4u/scripts
    - run: echo "ci-scripts" >> .git/info/exclude
    - name: Install Go
      uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
      with:
        go-version: ${{ env.GOVERSION }}
        cache-dependency-path: "**/*.sum"
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@cd6b2b78ad38bdd294341cda064ec0692b06215b # v1.14.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/actions@13b8b7177d6fb736766875dac9b78aab07bd785f # v6.0.1
    - name: Setup Node
      uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
      with:
        node-version: ${{ env.NODEVERSION }}
        registry-url: https://registry.npmjs.org
    - name: Setup DotNet
      uses: actions/setup-dotnet@87b7050bc53ea08284295505d98d2aa94301e852 # v4.2.0
      with:
        dotnet-version: ${{ env.DOTNETVERSION }}
    - name: Setup Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: ${{ env.PYTHONVERSION }}
    - name: Download python SDK
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: python-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress python SDK
      run: tar -zxf ${{github.workspace}}/sdk/python.tar.gz -C
        ${{github.workspace}}/sdk/python
    - name: Download dotnet SDK
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: dotnet-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress dotnet SDK
      run: tar -zxf ${{github.workspace}}/sdk/dotnet.tar.gz -C
        ${{github.workspace}}/sdk/dotnet
    - name: Download nodejs SDK
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: nodejs-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress nodejs SDK
      run: tar -zxf ${{github.workspace}}/sdk/nodejs.tar.gz -C
        ${{github.workspace}}/sdk/nodejs
    - name: Install Twine
      run: python -m pip install twine==5.0.0
    - name: Publish SDKs
      run: ./ci-scripts/ci/publish-tfgen-package ${{ github.workspace }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        PYPI_PUBLISH_ARTIFACTS: all
        VERSION: ${{ steps.version.outputs.version }}

  # publish_java_sdk:
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   needs: publish
  #   name: publish_java_sdk
  #   steps:
  #   - name: Checkout Repo
  #     uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
  #     with:
  #       lfs: true
  #   - id: version
  #     name: Set Provider Version
  #     uses: pulumi/provider-version-action@f96d032a2758fdda7939e5728eff6c0d980ae894 # v1.6.0
  #     with:
  #       set-env: PROVIDER_VERSION
  #   - name: Install Go
  #     uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
  #     with:
  #       go-version: ${{ env.GOVERSION }}
  #       cache-dependency-path: "**/*.sum"
  #   - name: Install pulumictl
  #     uses: jaxxstorm/action-install-gh-release@cd6b2b78ad38bdd294341cda064ec0692b06215b # v1.14.0
  #     with:
  #       repo: pulumi/pulumictl
  #   - name: Install Pulumi CLI
  #     uses: pulumi/actions@13b8b7177d6fb736766875dac9b78aab07bd785f # v6.0.1
  #   - name: Setup Java
  #     uses: actions/setup-java@7a6d8a8234af8eb26422e24e3006232cccaa061b # v4.6.0
  #     with:
  #       java-version: ${{ env.JAVAVERSION }}
  #       distribution: temurin
  #       cache: gradle
  #   - name: Setup Gradle
  #     uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
  #     with:
  #       gradle-version: "7.6"
  #   - name: Download java SDK
  #     uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
  #     with:
  #       name: java-sdk.tar.gz
  #       path: ${{ github.workspace}}/sdk/
  #   - name: Uncompress java SDK
  #     run: tar -zxf ${{github.workspace}}/sdk/java.tar.gz -C
  #       ${{github.workspace}}/sdk/java
  #   - name: Publish Java SDK
  #     uses: gradle/gradle-build-action@ac2d340dc04d9e1113182899e983b5400c17cda1 # v3.5.0
  #     env:
  #       PACKAGE_VERSION: ${{ env.PROVIDER_VERSION }}
  #     with:
  #       arguments: publishToSonatype closeAndReleaseSonatypeStagingRepository
  #       build-root-directory: ./sdk/java
  #       gradle-version: 7.4.1
  publish_go_sdk:
    runs-on: ubuntu-latest
    name: publish-go-sdk
    needs: publish_sdk
    steps:
    - name: Checkout Repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        lfs: true
    - id: version
      name: Set Provider Version
      uses: pulumi/provider-version-action@f96d032a2758fdda7939e5728eff6c0d980ae894 # v1.6.0
      with:
        set-env: PROVIDER_VERSION
    - name: Download go SDK
      uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      with:
        name: go-sdk.tar.gz
        path: ${{ github.workspace}}/sdk/
    - name: Uncompress go SDK
      run: tar -zxf ${{github.workspace}}/sdk/go.tar.gz -C
        ${{github.workspace}}/sdk/go
    - name: Publish Go SDK
      uses: pulumi/publish-go-sdk-action@v1
      with:
        repository: ${{ github.repository }}
        base-ref: ${{ github.sha }}
        source: sdk
        path: sdk
        version: ${{ steps.version.outputs.version }}
        additive: false
        files: |-
          go.*
          go/**
          !*.tar.gz
  dispatch_docs_build:
    runs-on: ubuntu-latest
    needs: publish_go_sdk
    steps:
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@cd6b2b78ad38bdd294341cda064ec0692b06215b # v1.14.0
      with:
        repo: pulumi/pulumictl
    - name: Dispatch Event
      run: pulumictl create docs-build pulumi-${{ env.PROVIDER }}
        ${GITHUB_REF#refs/tags/}
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
    name: dispatch_docs_build