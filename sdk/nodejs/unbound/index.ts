// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { HostAliasOverrideArgs } from "./hostAliasOverride";
export type HostAliasOverride = import("./hostAliasOverride").HostAliasOverride;
export const HostAliasOverride: typeof import("./hostAliasOverride").HostAliasOverride = null as any;
utilities.lazyLoad(exports, ["HostAliasOverride"], () => require("./hostAliasOverride"));

export { HostOverrideArgs } from "./hostOverride";
export type HostOverride = import("./hostOverride").HostOverride;
export const HostOverride: typeof import("./hostOverride").HostOverride = null as any;
utilities.lazyLoad(exports, ["HostOverride"], () => require("./hostOverride"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "opnsense:unbound:HostAliasOverride":
                return new HostAliasOverride(name, <any>undefined, { urn })
            case "opnsense:unbound:HostOverride":
                return new HostOverride(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("opnsense", "unbound", _module)
